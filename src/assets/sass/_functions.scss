/*functions for calculating the percentage width
===========================================================================*/
@function rem($size) {
    @return $size / 16px * 1rem;
}

/*functions for auto text color adjust with bg color
===========================================================================*/
@function set-color($color) {
    @if(lightness($color) > 40) {
        @return #000;
    } @else{
        @return #fff;
    }
}


$global-font-size: 100% !default;
@function strip-unit($num) {
    @return $num / ($num * 0 + 1);
}

@function rem-calc($values, $base: null) {
    $rem-values: ();
    $count: length($values);

    /* If no base is defined, defer to the global font size */
    @if $base == null {
        $base: $global-font-size;
    }

    @if unit($base) == '%' {
        $base: ($base / 100%) * 16px;
    }

    /* Using rem as base allows correct scaling */
    @if unit($base) == 'rem' {
        $base: strip-unit($base) * 16px;
    }

    @if $count == 1 {
        @return -to-rem($values, $base);
    }

    @for $i from 1 through $count {
        $rem-values: append($rem-values, -to-rem(nth($values, $i), $base));
    }

    @return $rem-values;
}

@function -to-rem($value, $base: null) {
    @if type-of($value) != 'number' {
        @warn inspect($value) + ' was passed to rem-calc(), which is not a number.';
        @return $value;
    }

    @if unit($value) == 'em' {
        $value: strip-unit($value) * 1rem;
    }
    
    @if unit($value) != 'rem' {
        $value: strip-unit($value) / strip-unit($base) * 1rem;
    }

    /* Turn 0rem into 0 */
    @if $value == 0rem {
        $value: 0;
    }

    @return $value;
}